{"version":"V2.0","versionNumber":"V2.2.3","type":"cores3","components":[{"name":"screen","type":"screen","layer":0,"screenId":"builtin","screenName":"","id":"__cores3_screen","createTime":1741910042213,"x":0,"y":0,"width":320,"height":240,"backgroundColor":"#222222","size":0,"isSelected":true},{"name":"lb_speed","type":"label","layer":1,"screenId":"builtin","screenName":"","id":"m5FVcfRdFPd9I@Ew","createTime":1741914803096,"x":5,"y":5,"color":"#ffffff","backgroundColor":"#222222","text":"speed:","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":63,"height":20},{"name":"lb_steer","type":"label","layer":2,"screenId":"builtin","screenName":"","id":"eQpNkSC!rSL15Tc_","createTime":1741914803096,"x":165,"y":5,"color":"#ffffff","backgroundColor":"#222222","text":"steer:","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":54,"height":20},{"name":"lb_speed_v","type":"label","layer":3,"screenId":"builtin","screenName":"","id":"xO5IAi+Ze3yv4@9b","createTime":1741914803096,"x":80,"y":5,"color":"#ffffff","backgroundColor":"#222222","text":"0","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":11,"height":20},{"name":"lb_steer_v","type":"label","layer":4,"screenId":"builtin","screenName":"","id":"m+INE!wkwXKO*0+V","createTime":1741914803096,"x":230,"y":5,"color":"#ffffff","backgroundColor":"#222222","text":"0","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":11,"height":20},{"name":"lb_speed_l","type":"label","layer":5,"screenId":"builtin","screenName":"","id":"dcSj#7N+IW`MF`MU","createTime":1741914803096,"x":5,"y":70,"color":"#ffffff","backgroundColor":"#222222","text":"speedL:","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":74,"height":20},{"name":"lb_speed_r","type":"label","layer":6,"screenId":"builtin","screenName":"","id":"k8`Fu%T@BZ1F0_de","createTime":1741914803096,"x":165,"y":70,"color":"#ffffff","backgroundColor":"#222222","text":"speedR:","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":76,"height":20},{"name":"lb_speed_l_v","type":"label","layer":7,"screenId":"builtin","screenName":"","id":"i3vuM1NlejRAQ$B-","createTime":1741914803096,"x":91,"y":70,"color":"#ffffff","backgroundColor":"#222222","text":"0","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":11,"height":20},{"name":"lb_speed_r_v","type":"label","layer":8,"screenId":"builtin","screenName":"","id":"eyuMzL_wSxzvAr1C","createTime":1741914803096,"x":250,"y":70,"color":"#ffffff","backgroundColor":"#222222","text":"0","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":11,"height":20},{"name":"lb_bat","type":"label","layer":9,"screenId":"builtin","screenName":"","id":"h4VYV-v8ZG%=aYX6","createTime":1741914803096,"x":5,"y":140,"color":"#ffffff","backgroundColor":"#222222","text":"BAT:","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":40,"height":20},{"name":"lb_bat_v","type":"label","layer":10,"screenId":"builtin","screenName":"","id":"kU1fO7fW=q4irzYJ","createTime":1741914803096,"x":60,"y":140,"color":"#ffffff","backgroundColor":"#222222","text":"0","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":11,"height":20},{"name":"lb_temp","type":"label","layer":11,"screenId":"builtin","screenName":"","id":"y3ccI2!lwLPmEiLw","createTime":1741914803096,"x":160,"y":140,"color":"#ffffff","backgroundColor":"#222222","text":"Temp:","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":40,"height":21},{"name":"lb_temp_V","type":"label","layer":12,"screenId":"builtin","screenName":"","id":"sL`fGrHlJka4-Xo%","createTime":1741914803096,"x":230,"y":140,"color":"#ffffff","backgroundColor":"#222222","text":"0","engine":"gfx","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false,"width":12,"height":21}],"resources":[{"hardware":["hardware_button","hardware_pin_button","uart","imu","speaker","touch","als","mic"]},{"custom":["custom_hoverwheels"]}],"units":[],"hats":[],"bases":[],"i2cs":[],"blockly":"<variables><variable id=\"7|ovpyM5%Co[wZN7),@v\">data</variable><variable id=\"us%6gukHExka7mD*3lfZ\">steer</variable><variable id=\"nkQYy;oZunCLvDv5:Wt@\">speed</variable><variable id=\"hsw4]XlcB:sOtS1,p*?k\">hover_data</variable></variables><block type=\"procedures_defnoreturn\" id=\"RK]+=%+_[1i-4uw;!g;6\" x=\"-910\" y=\"-350\"><mutation><arg name=\"data\" varid=\"7|ovpyM5%Co[wZN7),@v\"></arg></mutation><field name=\"NAME\">display_hover_data</field><comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment><statement name=\"STACK\"><block type=\"controls_if\" id=\"H$sa.nz-7d8QYTFO,Kx#\"><value name=\"IF0\"><block type=\"custom_hoverwheels_changed_speed_r\" id=\"ilguFh^HL8]5%DFtyRAk\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\",6NIRqYN8QO8/GB*/Jl2\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"g0wBVr+71=s~,gG[879Y\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value><statement name=\"DO0\"><block type=\"label_set_text\" id=\"O{EQAVoes1`kHZL#8s(i\"><field name=\"NAME\">lb_speed_r</field><value name=\"TEXT\"><shadow type=\"text\" id=\"b2BhV7J#o+k^NW92E4){\"><field name=\"TEXT\">Label</field></shadow><block type=\"custom_hoverwheels_decode_speed_r\" id=\";BakyejwVxYO.ESFwnP@\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"|/{l)f(3xZCN_UZ/ZhxI\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\",6%eMG]yguW@*e/2#|Gm\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value></block></statement><next><block type=\"controls_if\" id=\"Eg9Tg@l-kq8;E8Hw!hlp\"><value name=\"IF0\"><block type=\"custom_hoverwheels_changed_speed_l\" id=\"WCVd6]X2dKPO2mR`;p)v\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"try*E|#$i@CcwOUe$HrQ\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"iST#XMWeFy}B0%_Z|-dN\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value><statement name=\"DO0\"><block type=\"label_set_text\" id=\"rGR(,Eb{x4dhyH(Bp#nU\"><field name=\"NAME\">lb_speed_l</field><value name=\"TEXT\"><shadow type=\"text\" id=\"b2BhV7J#o+k^NW92E4){\"><field name=\"TEXT\">Label</field></shadow><block type=\"custom_hoverwheels_decode_speed_l\" id=\"8g,Q)^cuL--%s/N$NHEq\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"/cI@C`~R~rEQlD+!tf2=\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"75{V)nBQMi#W#nHcniJ.\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value></block></statement><next><block type=\"controls_if\" id=\"*D$.uh$$,=GaXKJNqPJI\"><value name=\"IF0\"><block type=\"custom_hoverwheels_changed_bat\" id=\",$*QQ]?[d!6U2#%44~*8\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"%uwHVnmvqcy$^vJtT-(}\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"[{GO|7#Oj~Cd,cVP1nMc\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value><statement name=\"DO0\"><block type=\"label_set_text\" id=\"glC=V2t|=-v52NXy1zho\"><field name=\"NAME\">lb_speed_l</field><value name=\"TEXT\"><shadow type=\"text\" id=\"b2BhV7J#o+k^NW92E4){\"><field name=\"TEXT\">Label</field></shadow><block type=\"custom_hoverwheels_decode_bat\" id=\"/)l/qMGGDm6xrWw.cQj!\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"ykDJxu{0TEGi_Uzg1]%[\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"%t?!$vH#QFeWWWOpUiGg\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value></block></statement><next><block type=\"controls_if\" id=\"/rH3.p40{L-`REJ.]6x[\"><value name=\"IF0\"><block type=\"custom_hoverwheels_changed_temp\" id=\",4i?wYJjbTPUrPB8Z(kU\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"C]t!f-yNxTucj=(rJ:LX\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"ckhCuc-ViT@o_%v{IH4v\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value><statement name=\"DO0\"><block type=\"label_set_text\" id=\"5nz{z+MR.$]IFiE~|RmP\"><field name=\"NAME\">lb_speed_l</field><value name=\"TEXT\"><shadow type=\"text\" id=\"o(Qp-z|#z/P0ZAb^R)xH\"><field name=\"TEXT\">Label</field></shadow><block type=\"custom_hoverwheels_decode_temp\" id=\"*Lm+hzH90B7Cwr`;~S;8\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"5/J0z/8{w-tmzs_NSMz3\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"W{rW0W*EkdVB3vZXH_)K\"><field name=\"VAR\" id=\"7|ovpyM5%Co[wZN7),@v\">data</field></block></value></block></value></block></statement></block></next></block></next></block></next></block></statement></block><block type=\"basic_on_setup\" id=\"setup_block\" deletable=\"false\" x=\"-910\" y=\"250\"><mutation isBegin=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_begin\" id=\"system_m5_begin\"><next><block type=\"variables_set\" id=\"W2cdT(Aj]fL#/Um20$jD\"><field name=\"VAR\" id=\"us%6gukHExka7mD*3lfZ\">steer</field><value name=\"VALUE\"><block type=\"math_number\" id=\"dK=*savt=.2lYW]xEInr\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">0</field></block></value><next><block type=\"variables_set\" id=\"goPa-fobnp(Nq]L*tV,5\"><field name=\"VAR\" id=\"nkQYy;oZunCLvDv5:Wt@\">speed</field><value name=\"VALUE\"><block type=\"math_number\" id=\"%QxXtJ/d[.[D9*||66$6\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">0</field></block></value><next><block type=\"custom_hoverwheels_init\" id=\"Va98_KbP/MjP9TZO2?uG\"><field name=\"NAME\">hoverwheels_0</field><field name=\"uart_num\">1</field><value name=\"tx\"><shadow type=\"math_number\" id=\"Ynj^wA1+C0qXG92;%U!h\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">9</field></shadow></value><value name=\"rx\"><shadow type=\"math_number\" id=\"ao:4wz[-w(zT[I@r|rCG\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">10</field></shadow></value></block></next></block></next></block></next></block></statement></block><block type=\"basic_on_loop\" id=\"loop_block\" deletable=\"false\" x=\"-910\" y=\"450\"><mutation isUpdate=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_update\" id=\"system_m5_update\"><next><block type=\"time_sleep_millisecond\" id=\"WD~?:Sfe%QOE2$*U9Q@8\"><value name=\"MS\"><shadow type=\"math_number\" id=\"X,wf~t6JGXbp~[AYBq.?\"><mutation max=\"Infinity\" min=\"0\" precision=\"0\"></mutation><field name=\"NUM\">330</field></shadow></value><next><block type=\"math_change\" id=\"hk_v,LV(O@~^DDH5W9K2\"><field name=\"VAR\" id=\"us%6gukHExka7mD*3lfZ\">steer</field><value name=\"DELTA\"><shadow type=\"math_number\" id=\"6]E24j|[[A4WT3{.ULHn\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">20</field></shadow></value><next><block type=\"custom_hoverwheels_command\" id=\"|c-g$[dl^-+8LN0qE%Wf\"><field name=\"NAME\">hoverwheels_0</field><value name=\"steer\"><shadow type=\"math_number\" id=\"Q%7Pb-QvW+=rc(.#ZH8M\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"f0S*^1cOW)@IGu2ly*QL\"><field name=\"VAR\" id=\"us%6gukHExka7mD*3lfZ\">steer</field></block></value><value name=\"speed\"><shadow type=\"math_number\" id=\"sH$8=dBS}!QVbmIwuAYC\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"*tmed(Qaye+yr+o9kglA\"><field name=\"VAR\" id=\"nkQYy;oZunCLvDv5:Wt@\">speed</field></block></value><next><block type=\"variables_set\" id=\"k%q|2PD%EjOZ=_97Bb$c\"><field name=\"VAR\" id=\"hsw4]XlcB:sOtS1,p*?k\">hover_data</field><value name=\"VALUE\"><block type=\"custom_hoverwheels_query\" id=\"uZj?)Zw^+]^ZC*w%nOn8\"><field name=\"NAME\">hoverwheels_0</field><value name=\"hover_data\"><shadow type=\"text\" id=\"KUEqJS(`*Z-]0QniL%m|\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"}~xjH,iO(FurtM*/F=r_\"><field name=\"VAR\" id=\"hsw4]XlcB:sOtS1,p*?k\">hover_data</field></block></value></block></value><next><block type=\"procedures_callnoreturn\" id=\"1l{MtUxOm$6L3KUs@ceo\"><mutation name=\"display_hover_data\"><arg name=\"data\"></arg></mutation><value name=\"ARG0\"><block type=\"variables_get\" id=\"%=oS9(c8`PNU`:SNG*HT\"><field name=\"VAR\" id=\"hsw4]XlcB:sOtS1,p*?k\">hover_data</field></block></value></block></next></block></next></block></next></block></next></block></next></block></statement></block>","screen":[{"simulationName":"Built-in","type":"builtin","width":320,"height":240,"scale":0.78,"screenName":"","blockId":"","screenColorType":0,"id":"builtin","createTime":1741910042211}],"logicWhenNum":0,"customList":[{"id":"custom_hoverwheels","name":"HoverWheels","color":"#c58ce4","blockly":"const CUSTOM_HOVERWHEELS_LANGUAGES = {\n  \"CUSTOM_HOVERWHEELS_INIT\": {\n    \"en\": \"%1 init uart_num %2 tx %3 rx %4\"\n  },\n  \"CUSTOM_HOVERWHEELS_COMMAND\": {\n    \"en\": \"command %1 steer %2 speed %3\"\n  },\n  \"CUSTOM_HOVERWHEELS_QUERY\": {\n    \"en\": \"query %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_CHANGED_SPEED_R\": {\n    \"en\": \"speed_r_changed? %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_DECODE_SPEED_R\": {\n    \"en\": \"decode_speed_r %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_CHANGED_SPEED_L\": {\n    \"en\": \"speed_l_changed? %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_DECODE_SPEED_L\": {\n    \"en\": \"decode_speed_l %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_CHANGED_BAT\": {\n    \"en\": \"bat_changed? %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_DECODE_BAT\": {\n    \"en\": \"decode_bat %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_CHANGED_TEMP\": {\n    \"en\": \"temp_changed? %1 hover_data %2\"\n  },\n  \"CUSTOM_HOVERWHEELS_DECODE_TEMP\": {\n    \"en\": \"decode_temp %1 hover_data %2\"\n  }\n};\n\nconst initType = 'custom_hoverwheels_init';\nBlockly.BlockRegExpList['custom_hoverwheels'] = {\n  regexp: new RegExp(/^custom_hoverwheels_/),\n  code: \"from HoverWheels import HoverWheels\",\n  initBlockType: initType,\n  categoryId: 'custom_hoverwheels',\n}\nBlockly.utils.registerLanguages(CUSTOM_HOVERWHEELS_LANGUAGES)\n\nBlockly.Msg.CUSTOM_HOVERWHEELS_HUE = '#c58ce4'\nBlockly.Msg.CUSTOM_HOVERWHEELS = 'HoverWheels'\n\nBlockly.utils.getcustom_hoverwheelsOptions = function() {\n  let options = [];\n  let list = Blockly.utils.getCustomNameList(initType);\n  for (let i = 0; i < list.length; i++) {\n    let value = list[i];\n    options.push([String(value), String(value)]);\n  }\n  if (options.length === 0) return [\n    ['hoverwheels_0', 'hoverwheels_0']\n  ];\n  return options;\n}\n\n\nBlockly.Blocks[\"custom_hoverwheels_init\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_INIT,\n      'args0': [\n        // { 'type': 'field_dropdown', 'name': 'NAME', 'options': Blockly.utils.getcustom_hoverwheelsOptions },\n        {\n          'type': 'field_input',\n          'name': 'NAME',\n          'text': 'hoverwheels_0'\n        },\n        {\n          \"type\": \"field_dropdown\",\n          \"name\": \"uart_num\",\n          \"options\": [\n            [\"0\", \"0\"],\n            [\"1\", \"1\"],\n            [\"2\", \"2\"]\n          ],\n        }, {\n          'type': 'input_value',\n          'name': 'tx'\n        }, {\n          'type': 'input_value',\n          'name': 'rx'\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n      \"tool\": []\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_init\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var uart_num = block.getFieldValue('uart_num');\n  var tx = Blockly.Python.valueToCode(block, 'tx', Blockly.Python.ORDER_FUNCTION_CALL);\n  var rx = Blockly.Python.valueToCode(block, 'rx', Blockly.Python.ORDER_FUNCTION_CALL);\n  return `${varname} = HoverWheels(${uart_num}, ${tx}, ${rx})\\n`\n}\n\nBlockly.Blocks[\"custom_hoverwheels_command\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_COMMAND,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'steer'\n        }, {\n          'type': 'input_value',\n          'name': 'speed'\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_command\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var steer = Blockly.Python.valueToCode(block, 'steer', Blockly.Python.ORDER_FUNCTION_CALL);\n  var speed = Blockly.Python.valueToCode(block, 'speed', Blockly.Python.ORDER_FUNCTION_CALL);\n  return `${varname}.command(${steer}, ${speed})\\n`\n}\n\nBlockly.Blocks[\"custom_hoverwheels_query\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_QUERY,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_query\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.query(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_changed_speed_r\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_CHANGED_SPEED_R,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_changed_speed_r\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.changed_speed_r(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_decode_speed_r\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_DECODE_SPEED_R,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_decode_speed_r\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.decode_speed_r(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_changed_speed_l\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_CHANGED_SPEED_L,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_changed_speed_l\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.changed_speed_l(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_decode_speed_l\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_DECODE_SPEED_L,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_decode_speed_l\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.decode_speed_l(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_changed_bat\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_CHANGED_BAT,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_changed_bat\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.changed_bat(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_decode_bat\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_DECODE_BAT,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_decode_bat\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.decode_bat(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_changed_temp\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_CHANGED_TEMP,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_changed_temp\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.changed_temp(${hover_data})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_hoverwheels_decode_temp\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_HOVERWHEELS_DECODE_TEMP,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_hoverwheelsOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'hover_data'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#c58ce4\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_hoverwheels_decode_temp\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var hover_data = Blockly.Python.valueToCode(block, 'hover_data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.decode_temp(${hover_data})`, Blockly.Python.ORDER_NONE]\n}","toolbox":"\n<category name=\"HoverWheels\" colour=\"#c58ce4\" hidden=\"true\" toolboxitemid=\"custom_hoverwheels\">\n<title text=\"HoverWheels\" docsLink=\"https://github.com/cosmoBots/uiflow_hoverboard\"></title>\n<block type=\"custom_hoverwheels_init\">\n  <value name=\"tx\">\n    <shadow type=\"math_number\">\n      <field name=\"NUM\">32</field>\n    </shadow>\n  </value>\n  <value name=\"rx\">\n    <shadow type=\"math_number\">\n      <field name=\"NUM\">33</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_command\">\n  <value name=\"steer\">\n    <shadow type=\"math_number\">\n      <field name=\"NUM\">0</field>\n    </shadow>\n  </value>\n  <value name=\"speed\">\n    <shadow type=\"math_number\">\n      <field name=\"NUM\">0</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_query\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_changed_speed_r\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_decode_speed_r\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_changed_speed_l\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_decode_speed_l\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_changed_bat\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_decode_bat\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_changed_temp\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_hoverwheels_decode_temp\">\n  <value name=\"hover_data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block>\n</category>\n","pyCode":"\n\"\"\"\nfile     HoverWheels\ntime     2025-03-14\nauthor   Txinto Vaz\nemail   txinto@elporis.com\nlicense  MIT License\n\"\"\"\n\nimport os, sys, io\nimport M5\nfrom M5 import *\nfrom HoverWheels import HoverWheels\nimport time\nfrom hardware import UART\n\nclass HoverWheels:\n    \"\"\"\n    note:\n        en: ''\n    details:\n        color: '#c58ce4'\n        link: https://github.com/cosmoBots/uiflow_hoverboard\n        image: ''\n        category: Custom\n    example: ''\n    \"\"\"\n\n\n\n\n    def __init__(self, uart_num, tx: int = 32, rx: int = 33):\n        \"\"\"\n        label:\n            en: '%1 init uart_num %2 tx %3 rx %4'\n        params:\n            uart_num:\n                name: uart_num\n                field: dropdown\n                options:\n                    '0': '0'\n                    '1': '1'\n                    '2': '2'\n            tx:\n                name: tx\n                type: int\n                default: '32'\n                field: number\n                max: '100'\n                min: '0'\n            rx:\n                name: rx\n                type: int\n                default: '33'\n                field: number\n                max: '100'\n                min: '0'\n        \"\"\"\n        self = UART(uart_num, baudrate=115200, bits=8, parity=None, stop=1, tx=tx, rx=rx, txbuf=256, rxbuf=256, timeout=0, timeout_char=0, invert=0, flow=0)\n\n    def command(self, steer: int = 0, speed: int = 0):\n        \"\"\"\n        label:\n            en: command %1 steer %2 speed %3\n        params:\n            steer:\n                name: steer\n                type: int\n                default: '0'\n                field: number\n                max: '100'\n                min: '0'\n            speed:\n                name: speed\n                type: int\n                default: '0'\n                field: number\n                max: '100'\n                min: '0'\n        \"\"\"\n        start = 43981\n        msg = bytearray(8)\n        msg[0] = start & 255\n        msg[1] = start >> 8\n        msg[2] = steer & 255\n        msg[3] = steer >> 8\n        msg[4] = speed & 255\n        msg[5] = speed >> 8\n        checksum = (start ^ steer) ^ speed\n        msg[6] = checksum & 255\n        msg[7] = checksum >> 8\n        self.write(bytes(msg))\n\n    def query(self, hover_data):\n        \"\"\"\n        label:\n            en: query %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        # Constantes\n        hr_cte_start = 43981\n        hr_st_inicio = 0\n        hr_st_inicio_2 = 1\n        hr_st_cmd1_1 = 2\n        hr_st_cmd1_2 = 3\n        hr_st_cmd2_1 = 4\n        hr_st_cmd2_2 = 5\n        hr_st_spd_r_1 = 6\n        hr_st_spd_r_2 = 7\n        hr_st_spd_l_1 = 8\n        hr_st_spd_l_2 = 9\n        hr_st_bat_1 = 10\n        hr_st_bat_2 = 11\n        hr_st_temp_1 = 12\n        hr_st_temp_2 = 13\n        hr_st_cmdled_1 = 14\n        hr_st_cmdled_2 = 15\n        hr_st_checksum_1 = 16\n        hr_st_checksum_2 = 17\n\n        # Estados y flags\n        hr_msg_recibido = False\n        hr_estado_recepcion = hr_st_inicio\n\n        # Buffers y variables de decodificacion\n        hr_byte_entrante = None\n        hr_byte_anterior = None\n        hr_msg_rcv = bytearray(32)\n\n        # Valores intermedios de la recepcion\n        hr_tmp_start = None\n        hr_tmp_cmd1 = None\n        hr_tmp_cmd2 = None\n        hr_tmp_spd_r = None\n        hr_tmp_spd_l = None\n        hr_tmp_bat = None\n        hr_tmp_temp = None\n        hr_tmp_cmdled = None\n        hr_tmp_checksum = None\n\n        # Argumentos destino de la recepcion\n        cmd1_flag = False\n        cmd2_flag = False\n        spd_r_flag = False\n        spd_l_flag = False\n        bat_flag = False\n        temp_flag = False\n        cmdled_flag = False\n\n        while self.any():\n            hr_msg_rcv = self.read(1)\n            hr_byte_entrante = hr_msg_rcv[0]\n            if hr_estado_recepcion==hr_st_inicio:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_inicio_2\n\n            elif hr_estado_recepcion==hr_st_inicio_2:\n                start_entrante = (hr_byte_entrante << 8) | hr_byte_anterior\n                if start_entrante == hr_cte_start:\n                    hr_estado_recepcion = hr_st_cmd1_1\n\n                else:\n                    hr_estado_recepcion = hr_st_inicio\n\n            elif hr_estado_recepcion==hr_st_cmd1_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_cmd1_2\n\n            elif hr_estado_recepcion==hr_st_cmd1_2:\n                hr_tmp_cmd1 = (hr_byte_entrante << 8) | hr_byte_anterior\n                hr_estado_recepcion = hr_st_cmd2_1\n\n            elif hr_estado_recepcion==hr_st_cmd2_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_cmd2_2\n\n            elif hr_estado_recepcion==hr_st_cmd2_2:\n                hr_tmp_cmd2 = (hr_byte_entrante << 8) | hr_byte_anterior\n                hr_estado_recepcion = hr_st_spd_r_1\n\n            elif hr_estado_recepcion==hr_st_spd_r_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_spd_r_2\n\n            elif hr_estado_recepcion==hr_st_spd_r_2:\n                hr_tmp_spd_r = (hr_byte_entrante << 8) | hr_byte_anterior\n                if hr_tmp_spd_r > 32000:\n                    hr_tmp_spd_r = hr_tmp_spd_r - 65536\n\n                hr_estado_recepcion = hr_st_spd_l_1\n\n            elif hr_estado_recepcion==hr_st_spd_l_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_spd_l_2\n\n            elif hr_estado_recepcion==hr_st_spd_l_2:\n                hr_tmp_spd_l = (hr_byte_entrante << 8) | hr_byte_anterior\n                if hr_tmp_spd_l > 32000:\n                    hr_tmp_spd_l = hr_tmp_spd_l - 65536\n\n                hr_estado_recepcion = hr_st_bat_1\n\n            elif hr_estado_recepcion==hr_st_bat_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_bat_2\n\n            elif hr_estado_recepcion==hr_st_bat_2:\n                hr_tmp_bat = (hr_byte_entrante << 8) | hr_byte_anterior\n                hr_estado_recepcion = hr_st_temp_1\n\n            elif hr_estado_recepcion==hr_st_temp_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_temp_2\n\n            elif hr_estado_recepcion==hr_st_temp_2:\n                hr_tmp_temp = (hr_byte_entrante << 8) | hr_byte_anterior\n                hr_estado_recepcion = hr_st_cmdled_1\n\n            elif hr_estado_recepcion==hr_st_cmdled_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_cmdled_2\n\n            elif hr_estado_recepcion==hr_st_cmdled_2:\n                hr_tmp_cmdled = (hr_byte_entrante << 8) | hr_byte_anterior\n                hr_estado_recepcion = hr_st_checksum_1\n\n            elif hr_estado_recepcion==hr_st_checksum_1:\n                hr_byte_anterior = hr_byte_entrante\n                hr_estado_recepcion = hr_st_checksum_2\n\n            elif hr_estado_recepcion==hr_st_checksum_2:\n                hr_tmp_checksum = (hr_byte_entrante << 8) | hr_byte_anterior\n                hr_estado_recepcion = hr_st_inicio\n                hr_msg_recibido = True\n                break\n\n            else:\n                pass\n\n        if (len(hover_data)>=7):\n            cmd1_rcv = hover_data[0]\n            cmd2_rcv = hover_data[1]\n            spd_r_rcv = hover_data[2]\n            spd_l_rcv = hover_data[3]\n            bat_rcv = hover_data[4]\n            temp_rcv = hover_data[5]\n            cmdled_rcv = hover_data[6]\n\n        else:\n            cmd1_rcv = 0\n            cmd2_rcv = 0\n            spd_r_rcv = 0\n            spd_l_rcv = 0\n            bat_rcv = 0\n            temp_rcv = 0\n            cmdled_rcv = 0\n\n        cmd1_flag = False\n        cmd2_flag = False\n        spd_r_flag = False\n        spd_l_flag = False\n        bat_flag = False\n        temp_flag = False\n        cmdled_flag = False\n\n        if hr_msg_recibido:\n            if cmd1_rcv != hr_tmp_cmd1:\n                cmd1_rcv = hr_tmp_cmd1\n                cmd1_flag = True\n\n            if cmd2_rcv != hr_tmp_cmd2:\n                cmd2_rcv = hr_tmp_cmd2\n                cmd2_flag = True\n\n            if spd_r_rcv != hr_tmp_spd_r:\n                spd_r_rcv = hr_tmp_spd_r\n                spd_r_flag = True\n\n            if spd_l_rcv != hr_tmp_spd_l:\n                spd_l_rcv = hr_tmp_spd_l\n                spd_l_flag = True\n\n            if bat_rcv != hr_tmp_bat:\n                bat_rcv = hr_tmp_bat\n                bat_flag = True\n\n            if temp_rcv != hr_tmp_temp:\n                temp_rcv = hr_tmp_temp\n                temp_flag = True\n\n            if cmdled_rcv != hr_tmp_cmdled:\n                cmdled_rcv = hr_tmp_cmdled\n                cmdled_flag = True\n\n        return [cmd1_rcv, cmd2_rcv, spd_r_rcv, spd_l_rcv, bat_rcv, temp_rcv, cmdled_rcv,\n        cmd1_flag, cmd2_flag, spd_r_flag, spd_l_flag, bat_flag, temp_flag, cmdled_flag]\n\n    def changed_speed_r(self, hover_data):\n        \"\"\"\n        label:\n            en: speed_r_changed? %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[9]\n\n    def decode_speed_r(self, hover_data):\n        \"\"\"\n        label:\n            en: decode_speed_r %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[2]\n\n    def changed_speed_l(self, hover_data):\n        \"\"\"\n        label:\n            en: speed_l_changed? %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[10]\n\n    def decode_speed_l(self, hover_data):\n        \"\"\"\n        label:\n            en: decode_speed_l %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[3]\n\n    def changed_bat(self, hover_data):\n        \"\"\"\n        label:\n            en: bat_changed? %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[11]\n\n    def decode_bat(self, hover_data):\n        \"\"\"\n        label:\n            en: decode_bat %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[4]\n\n    def changed_temp(self, hover_data):\n        \"\"\"\n        label:\n            en: temp_changed? %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[12]\n\n    def decode_temp(self, hover_data):\n        \"\"\"\n        label:\n            en: decode_temp %1 hover_data %2\n        params:\n            hover_data:\n                name: hover_data\n        \"\"\"\n        return hover_data[5]\n\n\n"}]}